import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,d as o,b as n}from"./app-C4F9KTig.js";const l={};function s(a,t){return n(),r("div",null,t[0]||(t[0]=[o('<p>好的，我们来一步一步地理解 L1 和 L2 Norm（范数）这两个非常重要且基础的概念。</p><p>简单来说，<strong>Norm（范数）</strong> 是一个数学工具，用来<strong>衡量向量的大小或长度</strong>。你可以把它想象成一把测量“多维空间中的距离”的尺子。L1 和 L2 是这把尺子上两种最常见的刻度。</p><hr><h3 id="_1-从直观理解开始-从点到点的路径" tabindex="-1"><a class="header-anchor" href="#_1-从直观理解开始-从点到点的路径"><span>1. 从直观理解开始：从点到点的路径</span></a></h3><p>想象一下你在一个城市里，要从点 A 走到点 B。</p><ul><li><strong>L2 Norm (欧几里得距离)</strong>：就像一只鸟<strong>直线飞过去</strong>的距离。这是我们所认为的“最短距离”。 <ul><li>在城市地图上，这就是连接两点的直线长度。</li></ul></li><li><strong>L1 Norm (曼哈顿距离)</strong>：就像你<strong>沿着城市的街道网格走路</strong>，只能直角转弯。你走过的总路程就是 L1 距离。 <ul><li>它得名于纽约曼哈顿的棋盘式街道布局，你不能斜着穿过大楼，只能沿着街道走。</li></ul></li></ul><hr><h3 id="_2-数学定义" tabindex="-1"><a class="header-anchor" href="#_2-数学定义"><span>2. 数学定义</span></a></h3><p>现在我们用数学公式来精确地定义它们。假设我们有一个向量 <code>v = [v₁, v₂, v₃, ..., vₙ]</code>，它有 n 个维度。</p><h4 id="l2-norm-欧几里得范数" tabindex="-1"><a class="header-anchor" href="#l2-norm-欧几里得范数"><span>L2 Norm (欧几里得范数)</span></a></h4><p>这是我们最熟悉的“长度”公式，是勾股定理在多维空间的扩展。<br><strong>计算公式：</strong><br><code>||v||₂ = √(v₁² + v₂² + v₃² + ... + vₙ²)</code></p><p><strong>计算示例：</strong><br> 向量 <code>v = [3, 4]</code><br> 它的 L2 Norm 是：<code>√(3² + 4²) = √(9 + 16) = √25 = 5</code><br> 这正好是一个 3-4-5 直角三角形的斜边长度。</p><h4 id="l1-norm-曼哈顿范数" tabindex="-1"><a class="header-anchor" href="#l1-norm-曼哈顿范数"><span>L1 Norm (曼哈顿范数)</span></a></h4><p>这是向量所有维度<strong>绝对值</strong>的总和。<br><strong>计算公式：</strong><br><code>||v||₁ = |v₁| + |v₂| + |v₃| + ... + |vₙ|</code></p><p><strong>计算示例：</strong><br> 同样向量 <code>v = [3, 4]</code><br> 它的 L1 Norm 是：<code>|3| + |4| = 3 + 4 = 7</code><br> 这就是在网格上从 (0,0) 走到 (3,4) 需要走的最短路径（例如，先向东走 3 格，再向北走 4 格）。</p><hr><h3 id="_3-几何意义-单位圆" tabindex="-1"><a class="header-anchor" href="#_3-几何意义-单位圆"><span>3. 几何意义：单位圆</span></a></h3><p>一个非常好的方式来可视化 L1 和 L2 的区别是看它们的<strong>单位圆（Unit Circle）</strong>——即所有“长度为 1”的点构成的图形。</p><ul><li><strong>L2 单位圆</strong>：所有到原点距离为 1 的点。这形成了一个我们熟悉的、光滑的圆形（在 3D 中是球体）。</li><li><strong>L1 单位圆</strong>：所有到原点曼哈顿距离为 1 的点。这形成了一个菱形（或正菱形）。</li></ul><p>从下图可以清晰地看到两者的几何差异：</p><hr><h3 id="_4-关键特性与对比" tabindex="-1"><a class="header-anchor" href="#_4-关键特性与对比"><span>4. 关键特性与对比</span></a></h3><table><thead><tr><th style="text-align:left;">特性</th><th style="text-align:left;">L1 Norm (曼哈顿距离)</th><th style="text-align:left;">L2 Norm (欧几里得距离)</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>计算方式</strong></td><td style="text-align:left;">绝对值之和</td><td style="text-align:left;">平方和的平方根</td></tr><tr><td style="text-align:left;"><strong>几何形状</strong></td><td style="text-align:left;">菱形（有尖点）</td><td style="text-align:left;">圆形（光滑）</td></tr><tr><td style="text-align:left;"><strong>稳健性</strong></td><td style="text-align:left;"><strong>对异常值更不敏感（更稳健）</strong></td><td style="text-align:left;">对异常值<strong>非常敏感</strong></td></tr><tr><td style="text-align:left;"><strong>稀疏性</strong></td><td style="text-align:left;"><strong>倾向于产生稀疏解</strong>（很多系数为0）</td><td style="text-align:left;">倾向于产生<strong>稠密解</strong>（系数都很小但非零）</td></tr><tr><td style="text-align:left;"><strong>计算效率</strong></td><td style="text-align:left;">计算简单（只需加绝对值）</td><td style="text-align:left;">计算涉及平方和开方，稍复杂</td></tr></tbody></table><p><strong>为什么 L1 对异常值更不敏感？</strong><br> 想象两个点：</p><ul><li><p>A: (1, 1)</p></li><li><p>B: (1, 5)</p></li><li><p><strong>L2 距离</strong>：<code>√((1-1)² + (5-1)²) = √(0 + 16) = 4</code></p></li><li><p><strong>L1 距离</strong>：<code>|1-1| + |5-1| = 0 + 4 = 4</code></p></li></ul><p>现在把 B 点变成一个异常值：B: (1, 10)</p><ul><li><strong>L2 距离</strong>：<code>√((1-1)² + (10-1)²) = √(0 + 81) = 9</code> （变化了 5）</li><li><strong>L1 距离</strong>：<code>|1-1| + |10-1| = 0 + 9 = 9</code> （变化了 5）</li></ul><p>看起来一样？我们再夸张一点，把 A 点放在原点 (0,0)，B 点放在 (1, 100)：</p><ul><li><strong>L2 距离</strong>：<code>√(1² + 100²) ≈ 100.005</code> <strong>（距离几乎完全由巨大的异常值 100 决定）</strong></li><li><strong>L1 距离</strong>：<code>1 + 100 = 101</code> <strong>（巨大值 100 和 小值 1 的贡献是线性叠加的）</strong></li></ul><p>L2 因为计算了平方，会极大地放大异常值的影响。而 L1 只是线性地处理每个维度，所以某个维度上的巨大值不会完全主导整个距离的计算。</p><hr><h3 id="_5-在机器学习和数据科学中的应用" tabindex="-1"><a class="header-anchor" href="#_5-在机器学习和数据科学中的应用"><span>5. 在机器学习和数据科学中的应用</span></a></h3><p>正是基于以上特性，L1 和 L2 在不同的场景下各有千秋。</p><ol><li><p><strong>作为损失函数 (Loss Function)</strong></p><ul><li><strong>L2 Loss (MSE, 均方误差)</strong>：最常用。它的光滑性使得求解梯度更容易，便于使用梯度下降法等优化算法。但对异常值敏感。</li><li><strong>L1 Loss (MAE, 平均绝对误差)</strong>：当你希望模型对数据中的异常值不敏感时使用（例如，金融数据中偶尔出现的极端波动）。</li></ul></li><li><p><strong>作为正则化器 (Regularizer)</strong><br> 这是两者最重要的应用之一，用于防止模型过拟合。</p><ul><li><strong>L2 正则化 (岭回归, Ridge Regression)</strong>：在损失函数中加入模型权重的 <strong>L2 Norm</strong> 作为惩罚项。它倾向于让<strong>所有的权重都变小</strong>，但不会让任何一个权重直接变为 0。模型会更平滑、更稳定。</li><li><strong>L1 正则化 (Lasso 回归, Lasso Regression)</strong>：在损失函数中加入模型权重的 <strong>L1 Norm</strong> 作为惩罚项。它强大的特性是<strong>倾向于产生稀疏解</strong>，即它会自动进行“特征选择”，把不重要的特征的权重<strong>直接压缩到 0</strong>。这对于处理高维数据非常有用。</li></ul></li></ol><h3 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h3><table><thead><tr><th style="text-align:left;"></th><th style="text-align:left;">L1 Norm</th><th style="text-align:left;">L2 Norm</th></tr></thead><tbody><tr><td style="text-align:left;"><strong>绰号</strong></td><td style="text-align:left;">曼哈顿距离、 Taxicab Norm</td><td style="text-align:left;">欧几里得距离、 “普通”距离</td></tr><tr><td style="text-align:left;"><strong>计算</strong></td><td style="text-align:left;">绝对值之和</td><td style="text-align:left;">平方和的平方根</td></tr><tr><td style="text-align:left;"><strong>形状</strong></td><td style="text-align:left;">菱形</td><td style="text-align:left;">圆形</td></tr><tr><td style="text-align:left;"><strong>特点</strong></td><td style="text-align:left;">对异常值稳健、<strong>产生稀疏性</strong></td><td style="text-align:left;">对异常值敏感、解更平滑</td></tr><tr><td style="text-align:left;"><strong>主要用途</strong></td><td style="text-align:left;">L1 损失(MAE)、<strong>L1正则化(特征选择)</strong></td><td style="text-align:left;">L2 损失(MSE)、<strong>L2正则化(防止过拟合)</strong></td></tr></tbody></table><p>希望这个从直观到数学的解释能帮助你彻底理解 L1 和 L2 Norm 的区别！</p>',37)]))}const d=e(l,[["render",s]]),p=JSON.parse(`{"path":"/posts/machine_learning/mathematics/Norm%20%E8%8C%83%E6%95%B0.html","title":"Norm 范数","lang":"en-US","frontmatter":{"title":"Norm 范数","description":"好的，我们来一步一步地理解 L1 和 L2 Norm（范数）这两个非常重要且基础的概念。 简单来说，Norm（范数） 是一个数学工具，用来衡量向量的大小或长度。你可以把它想象成一把测量“多维空间中的距离”的尺子。L1 和 L2 是这把尺子上两种最常见的刻度。 1. 从直观理解开始：从点到点的路径 想象一下你在一个城市里，要从点 A 走到点 B。 L2 ...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Norm 范数\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-09-11T07:19:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Aaron L\\",\\"url\\":\\"https://aaronlzm.github.io\\",\\"email\\":\\"lzm_aaron@outlook.com\\"}]}"],["meta",{"property":"og:url","content":"https://aaronlzm.github.io/posts/machine_learning/mathematics/Norm%20%E8%8C%83%E6%95%B0.html"}],["meta",{"property":"og:site_name","content":"Aaron's Blog"}],["meta",{"property":"og:title","content":"Norm 范数"}],["meta",{"property":"og:description","content":"好的，我们来一步一步地理解 L1 和 L2 Norm（范数）这两个非常重要且基础的概念。 简单来说，Norm（范数） 是一个数学工具，用来衡量向量的大小或长度。你可以把它想象成一把测量“多维空间中的距离”的尺子。L1 和 L2 是这把尺子上两种最常见的刻度。 1. 从直观理解开始：从点到点的路径 想象一下你在一个城市里，要从点 A 走到点 B。 L2 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-09-11T07:19:18.000Z"}],["meta",{"property":"article:modified_time","content":"2025-09-11T07:19:18.000Z"}]]},"git":{"createdTime":1757508567000,"updatedTime":1757575158000,"contributors":[{"name":"lizhimou","username":"lizhimou","email":"lizhimou@bytedance.com","commits":2,"url":"https://github.com/lizhimou"}]},"readingTime":{"minutes":4.65,"words":1395},"filePathRelative":"posts/machine_learning/mathematics/Norm 范数.md","excerpt":"<p>好的，我们来一步一步地理解 L1 和 L2 Norm（范数）这两个非常重要且基础的概念。</p>\\n<p>简单来说，<strong>Norm（范数）</strong> 是一个数学工具，用来<strong>衡量向量的大小或长度</strong>。你可以把它想象成一把测量“多维空间中的距离”的尺子。L1 和 L2 是这把尺子上两种最常见的刻度。</p>\\n<hr>\\n<h3>1. 从直观理解开始：从点到点的路径</h3>\\n<p>想象一下你在一个城市里，要从点 A 走到点 B。</p>\\n<ul>\\n<li><strong>L2 Norm (欧几里得距离)</strong>：就像一只鸟<strong>直线飞过去</strong>的距离。这是我们所认为的“最短距离”。\\n<ul>\\n<li>在城市地图上，这就是连接两点的直线长度。</li>\\n</ul>\\n</li>\\n<li><strong>L1 Norm (曼哈顿距离)</strong>：就像你<strong>沿着城市的街道网格走路</strong>，只能直角转弯。你走过的总路程就是 L1 距离。\\n<ul>\\n<li>它得名于纽约曼哈顿的棋盘式街道布局，你不能斜着穿过大楼，只能沿着街道走。</li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{d as comp,p as data};
